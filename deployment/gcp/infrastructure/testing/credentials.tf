
# https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/secret_manager_secret#attributes-reference
# https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/secret_manager_secret_version#argument-reference
###############################################################################
# Generate random strings to use as various passwords
###############################################################################
resource "random_password" "postgres_password" {
  # A random password is generated for the PostgreSQL instance.
  # This password is then stored in GCP Secret Manager.
  length  = 16
  special = false
}

resource "random_password" "secrets" {
  # A random password is generated for JWT token, admin user password, etc.
  # This password is then stored in AWS Secrets Manager.
  length  = 16
  special = true
  count   = 2 # n passwords are generated
}

resource "random_password" "admin_api_key" {
  # Admin user's (initial) api key
  length  = 40
  special = true
}

###############################################################################
# Declare generated secrets and secret versions
###############################################################################

# Admin account credentials ###################################################
# Admin username
resource "google_secret_manager_secret" "admin_username_secret" {
  secret_id = "${var.deployment_group_name}-${var.environment}-admin-username"
  labels = {
    autogenerated = "true"
  }
  replication {
    auto {}
  }
}

resource "google_secret_manager_secret_version" "admin_username_secret_version" {
  secret = google_secret_manager_secret.admin_username_secret.id

  secret_data = var.admin_username
}

# Admin password
resource "google_secret_manager_secret" "admin_password_secret" {
  secret_id = "${var.deployment_group_name}-${var.environment}-admin-password"
  labels = {
    autogenerated = "true"
  }
  replication {
    auto {}
  }
}

resource "google_secret_manager_secret_version" "admin_password_secret_version" {
  secret      = google_secret_manager_secret.admin_password_secret.id
  secret_data = random_password.secrets[0].result
}

# Admin API key
resource "google_secret_manager_secret" "admin_api_key_secret" {
  secret_id = "${var.deployment_group_name}-${var.environment}-admin-api-key"
  labels = {
    autogenerated = "true"
  }
  replication {
    auto {}
  }
}

resource "google_secret_manager_secret_version" "admin_api_key_secret_version" {
  secret      = google_secret_manager_secret.admin_api_key_secret.id
  secret_data = random_password.admin_api_key.result
}

# DB credentials ##############################################################
# DB Host
resource "google_secret_manager_secret" "postgres_host_secret" {
  secret_id = "${var.deployment_group_name}-${var.environment}-db-host"
  labels = {
    autogenerated = "true"
  }
  replication {
    auto {}
  }
}

resource "google_secret_manager_secret_version" "postgres_host_secret_version" {
  secret      = google_secret_manager_secret.postgres_host_secret.id
  secret_data = google_sql_database_instance.postgres_instance.public_ip_address
}


# DB Password
resource "google_secret_manager_secret" "postgres_password_secret" {
  secret_id = "${var.deployment_group_name}-${var.environment}-db-password"
  labels = {
    autogenerated = "true"
  }
  replication {
    auto {}
  }
}

resource "google_secret_manager_secret_version" "postgres_password_secret_version" {
  secret      = google_secret_manager_secret.postgres_password_secret.id
  secret_data = random_password.postgres_password.result
}

# JWT secret ##################################################################
resource "google_secret_manager_secret" "jwt_secret" {
  secret_id = "${var.deployment_group_name}-${var.environment}-jwt-secret"
  labels = {
    autogenerated = "true"
  }
  replication {
    auto {}
  }
}

resource "google_secret_manager_secret_version" "jwt_secret_version" {
  secret = google_secret_manager_secret.jwt_secret.id

  secret_data = random_password.secrets[1].result
}

###############################################################################
# Create placeholder secrets
###############################################################################
# [Placeholder] Domain for deployment #########################################
resource "google_secret_manager_secret" "domain_secret" {
  secret_id = "${var.deployment_group_name}-${var.environment}-domain"
  labels = {
    autogenerated = "false"
  }
  replication {
    auto {}
  }
}

resource "google_secret_manager_secret_version" "domain_secret_version" {
  secret          = google_secret_manager_secret.domain_secret.id
  deletion_policy = "ABANDON"
  secret_data     = "placeholder" # pragma: allowlist secret
}

# [Placeholder] GCP credentials ###############################################
resource "google_secret_manager_secret" "gcp_credential_json_secret" {
  secret_id = "${var.deployment_group_name}-${var.environment}-gcp-credential-json"
  labels = {
    autogenerated = "false"
  }
  replication {
    auto {}
  }
}

resource "google_secret_manager_secret_version" "gcp_credential_json_secret_version" {
  secret          = google_secret_manager_secret.gcp_credential_json_secret.id
  deletion_policy = "ABANDON"
  secret_data     = "placeholder" # pragma: allowlist secret
}

# [Placeholder] Open AI API key ###############################################
resource "google_secret_manager_secret" "openai_api_key_secret" {
  secret_id = "${var.deployment_group_name}-${var.environment}-openai-api-key"
  labels = {
    autogenerated = "false"
  }
  replication {
    auto {}
  }
}

resource "google_secret_manager_secret_version" "openai_api_key_secret_version" {
  secret          = google_secret_manager_secret.openai_api_key_secret.id
  deletion_policy = "ABANDON"
  secret_data     = "placeholder" # pragma: allowlist secret
}

# [Placeholder] Google login client ID ########################################
resource "google_secret_manager_secret" "google_login_client_id_secret" {
  secret_id = "${var.deployment_group_name}-${var.environment}-google-login-client-id"
  labels = {
    autogenerated = "false"
  }
  replication {
    auto {}
  }
}

resource "google_secret_manager_secret_version" "google_login_client_id_secret_version" {
  secret          = google_secret_manager_secret.google_login_client_id_secret.id
  deletion_policy = "ABANDON"
  secret_data     = "placeholder" # pragma: allowlist secret
}

# [Placeholder] Langfuse keys #################################################
resource "google_secret_manager_secret" "langfuse_public_key_secret" {
  secret_id = "${var.deployment_group_name}-${var.environment}-langfuse-public-key"
  labels = {
    autogenerated = "false"
  }
  replication {
    auto {}
  }
}

resource "google_secret_manager_secret_version" "langfuse_public_key_secret_version" {
  secret          = google_secret_manager_secret.langfuse_public_key_secret.id
  deletion_policy = "ABANDON"
  secret_data     = "placeholder" # pragma: allowlist secret
}

resource "google_secret_manager_secret" "langfuse_secret_key_secret" {
  secret_id = "${var.deployment_group_name}-${var.environment}-langfuse-secret-key"
  labels = {
    autogenerated = "false"
  }
  replication {
    auto {}
  }
}

resource "google_secret_manager_secret_version" "langfuse_secret_key_secret_version" {
  secret          = google_secret_manager_secret.langfuse_secret_key_secret.id
  deletion_policy = "ABANDON"
  secret_data     = "placeholder" # pragma: allowlist secret
}
